define(['jquery','./USM'],function($,USM){'use strict';$(function(){var Selectboxes=function(el,options){var self=this;self.settings=$.extend({},$.fn.selectboxes.defaults,options);self.$el=$(el);self.$sbx=$('<div/>').addClass('sbx');self.myTrigger=self.trigger();self.myTrigger.init();};Selectboxes.prototype.trigger=function(){var self=this,mod={},sbxClasses=self.$el.attr('class')?self.$el.attr('class'):'',$sbxOptions=$('<div/>').addClass('sbx-options'),$sbxSelect=$('<div/>').addClass('sbx-select'),$sbxSelected=$('<div/>').addClass('sbx-selected'),$orgOptions=self.$el.find('option'),$orgSelected=$orgOptions.filter(':selected').first(),$resetButton=self.$el.parents('form').find('[type="reset"]').first();mod.init=function(){self.$sbx.addClass(sbxClasses);var $label=$('label[for='+$orgOptions.parent().attr('id')+']').first();if($label.hasClass('visually-hidden')){$orgOptions.parent().prepend('<option value="">'+$label.text()+'</option>');}
$sbxSelected.text($orgSelected.text()||$label.text()).appendTo(self.$sbxSelected);$orgOptions=self.$el.find('option');$orgOptions.each(function(index){var $this=$(this),$option=$('<div/>').addClass('sbx-option');$option.data('sbx-index',index).data('sbx-val',$this.val()).text($this.text()).appendTo($sbxOptions);if($this.data('icon')){var $icon=$('<span class="'+$this.data('icon')+'" >');$option.prepend($icon);if($option.data('sbx-val')===$orgSelected.val()){$sbxSelected.prepend($icon.clone());}}
$this.data('sbx-index',index);if($this.attr('selected')){$option.addClass('active');}});$sbxSelect.append($sbxSelected).append($sbxOptions).appendTo(self.$sbx);self.$el.replaceWith(self.$sbx);self.$el.appendTo(self.$sbx);self.$sbx.on('click','.sbx-selected',mod.toggleOptions);self.$sbx.on('click','.sbx-option',mod.setOption);self.$sbx.data('sbxSelectByValue',mod.selectOptionByValue);self.$sbx.data('sbxDisable',mod.disable);self.$sbx.data('sbxEnable',mod.enable);if($resetButton.length){$resetButton.click(mod.reset);}};mod.toggleOptions=function(){if($sbxOptions.hasClass('active')){mod.hideOptions();}else{mod.showOptions();}
return false;};mod.showOptions=function(){if(self.$sbx.parents().hasClass('disabled')==false){$sbxOptions.addClass('active');$(document).one('click.sbx',mod.hideOptions);$('.sbx-options.active').not($sbxOptions).removeClass('active');}
return false;};mod.hideOptions=function(){$sbxOptions.removeClass('active');$(document).off('click.sbx');return false;};mod.reset=function(){mod.selectOptionByIndex($orgSelected.index());};mod.setOption=function(e){var $this=$(e.currentTarget),index=$this.data('sbx-index');mod.selectOptionByIndex(index);};mod.selectOptionByIndex=function(index,silent){var $this=$sbxOptions.children().eq(index);$orgOptions.eq(index).attr('selected',true).siblings().attr('selected',false);$this.addClass('active').siblings().removeClass('active');$sbxSelected.html($this.html());self.$sbx.removeClass('error');mod.hideOptions();if(!silent){$(USM.events).trigger('SBX_CHANGE',[self.$el,self.$sbx]);}
return false;};mod.selectOptionByValue=function(value,silent){var $this=$sbxOptions.children().filter(function(){return $(this).data('sbx-val')===value;}),index=$this.first().data('sbx-index');if(index!==undefined){mod.selectOptionByIndex(index,silent);}};return{init:mod.init};};$.fn.selectboxes=function(options){return this.each(function(){var self=$(this);if(typeof options==='object'||!options){if(!self.data('selectboxes')){self.data('selectboxes',new Selectboxes(self,options));}}});};$.fn.selectboxes.defaults={};$('form select').filter(function(){if($(this).hasClass('sbx-no'))return false;if($(this).hasClass('cbx'))return false;return true;}).selectboxes();});});